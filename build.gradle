plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}

springBoot {
    mainClassName = 'urlshortener.Application'
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    wrapper {
        gradleVersion = '6.6.1'
    }

    
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies{
        compile group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
        compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
        compile 'com.github.kenglxn.QRGen:javase:2.6.0'
        compile("org.apache.camel.springboot:camel-spring-boot-starter:3.6.0")
        
        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-hateoas'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'commons-validator:commons-validator:1.6'
        implementation 'com.google.guava:guava:28.1-jre'

        runtime 'org.webjars:bootstrap:3.3.5'
        runtime 'org.webjars:jquery:2.1.4'

        compile 'org.hsqldb:hsqldb'

        testCompile group: 'junit', name: 'junit', version: '4.+'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.apache.httpcomponents:httpclient'
    }



    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

dependencies {
    compile 'com.github.kenglxn.QRGen:javase:2.6.0'
    compile("org.apache.camel.springboot:camel-spring-boot-starter:3.6.0")
    compile("org.apache.camel.springboot:camel-http-starter:3.6.0")
    compile("org.apache.camel.springboot:camel-jackson-starter:3.6.0")
    compile("org.apache.camel:camel-websocket:3.6.0")

    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.webjars:bootstrap:3.3.7'
    implementation 'org.webjars:jquery:3.1.1-1'

    testCompile("org.mock-server:mockserver-client-java:3.10.8")
    testCompile("org.mock-server:mockserver-netty:3.10.8")
    testCompile("org.apache.camel:camel-test-spring:3.6.0")
    testCompile("org.apache.camel:camel-test:3.6.0")
    testCompile("org.apache.camel:camel-test-spring-junit5:3.6.0")
}



task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

clean.doFirst {
    delete "db"
}